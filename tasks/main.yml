---

# (c) Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: include release specific variables
  include_vars: "{{ loop_var }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths: "../vars"
      skip: true
  loop_control:
    loop_var: "loop_var"
  tags: etcd

- name: include release specific tasks
  include_tasks: "{{ loop_var }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths: "."
      skip: true
  loop_control:
    loop_var: "loop_var"
  tags: etcd

- name: groupadd
  group:
    name: "etcd"
    system: true
    state: "present"
  tags: etcd

- name: useradd
  user:
    name: "etcd"
    group: "etcd"
    home: "/var/lib/etcd"
    shell: "/usr/sbin/nologin"
    system: true
    create_home: false
    state: "present"
  tags: etcd

- name: prepare directories
  file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0755') }}"
    state: "{{ item.state | default('directory') }}"
  with_items:
    - { dest: "/etc/default" }
    - { dest: "/etc/etcd/pki", owner: "etcd", group: "etcd", mode: "0700" }
    - { dest: "/lib/systemd/system" }
    - { dest: "/usr/local/bin" }
    - { dest: "/var/lib/etcd", owner: "etcd", group: "etcd" }
  tags: etcd

- name: download archive
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
    checksum: "{{ item.checksum }}"
  with_items:
    - "{{ etcd_download }}"
  register: result
  until: result is succeeded
  tags: etcd

- name: unarchive package
  shell: |
    set -o pipefail
    cd /usr/local/bin
    tar zxf {{ etcd_download.dest }} --strip-components=1 --wildcards "etcd*/etcd" "etcd*/etcdctl"
    chown -Rf root:root etcd etcdctl
  args:
    executable: "/bin/bash"
    creates: "/usr/local/bin/etcd"
  tags: etcd

- name: copy templates
  template:
    src: "./templates{{ item.dest }}.j2"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
  with_items:
    - { dest: "/etc/default/etcd" }
    - { dest: "/lib/systemd/system/etcd.service" }
  notify:
    - systemctl daemon-reload
  tags: etcd

- name: generate root ca private key
  openssl_privatekey:
    path: "/etc/etcd/pki/ca.key"
  when: inventory_hostname == ansible_play_hosts[0]
  delegate_to: "{{ ansible_play_hosts[0] }}"
  tags: etcd

- name: generate root ca csr
  openssl_csr:
    path: "/etc/etcd/pki/ca.csr"
    privatekey_path: "/etc/etcd/pki/ca.key"
    common_name: "{{ ansible_play_hosts[0] }}"
    subject:
      CN: "{{ ansible_play_hosts[0] }}"
    basic_constraints: "CA:TRUE"
  when: inventory_hostname == ansible_play_hosts[0]
  delegate_to: "{{ ansible_play_hosts[0] }}"
  tags: etcd

- name: generate root ca selfsigned certificate
  openssl_certificate:
    path: "/etc/etcd/pki/ca.crt"
    csr_path: "/etc/etcd/pki/ca.csr"
    privatekey_path: "/etc/etcd/pki/ca.key"
    provider: "selfsigned"
  when: inventory_hostname == ansible_play_hosts[0]
  delegate_to: "{{ ansible_play_hosts[0] }}"
  tags: etcd

- name: generate server private key
  openssl_privatekey:
    path: "/etc/etcd/pki/server.key"
  when: inventory_hostname == ansible_play_hosts[0]
  delegate_to: "{{ ansible_play_hosts[0] }}"
  tags: etcd

- name: generate server csr
  openssl_csr:
    path: "/etc/etcd/pki/server.csr"
    privatekey_path: "/etc/etcd/pki/server.key"
    common_name: "{{ ansible_play_hosts[0] }}"
    subject:
      CN: "{{ ansible_play_hosts[0] }}"
    subject_alt_name: >-
      {%- for host in ansible_play_hosts -%}
      DNS:{{ host }},
      {%- endfor -%}
      DNS:localhost,
      {%- for host in ansible_play_hosts -%}
      IP:{{ hostvars[host]['ansible_default_ipv4']['address'] }},
      {%- endfor -%}
      IP:127.0.0.1
    key_usage:
      - digitalSignature
      - keyEncipherment
      - nonRepudiation
    extended_key_usage:
      - clientAuth
      - serverAuth
    basic_constraints: "CA:FALSE"
  when: inventory_hostname == ansible_play_hosts[0]
  delegate_to: "{{ ansible_play_hosts[0] }}"
  tags: etcd

- name: generate server ownca certificate
  openssl_certificate:
    path: "/etc/etcd/pki/server.crt"
    csr_path: "/etc/etcd/pki/server.csr"
    privatekey_path: "/etc/etcd/pki/server.key"
    ownca_path: "/etc/etcd/pki/ca.crt"
    ownca_privatekey_path: "/etc/etcd/pki/ca.key"
    provider: "ownca"
  when: inventory_hostname == ansible_play_hosts[0]
  delegate_to: "{{ ansible_play_hosts[0] }}"
  tags: etcd

- name: generate peer private key
  openssl_privatekey:
    path: "/etc/etcd/pki/peer.key"
  when: inventory_hostname == ansible_play_hosts[0]
  delegate_to: "{{ ansible_play_hosts[0] }}"
  tags: etcd

- name: generate peer csr
  openssl_csr:
    path: "/etc/etcd/pki/peer.csr"
    privatekey_path: "/etc/etcd/pki/peer.key"
    common_name: "{{ ansible_play_hosts[0] }}"
    subject:
      CN: "{{ ansible_play_hosts[0] }}"
    subject_alt_name: >-
      {%- for host in ansible_play_hosts -%}
      DNS:{{ host }},
      {%- endfor -%}
      DNS:localhost,
      {%- for host in ansible_play_hosts -%}
      IP:{{ hostvars[host]['ansible_default_ipv4']['address'] }},
      {%- endfor -%}
      IP:127.0.0.1
    key_usage:
      - digitalSignature
      - keyEncipherment
      - nonRepudiation
    extended_key_usage:
      - clientAuth
      - serverAuth
    basic_constraints: "CA:FALSE"
  when: inventory_hostname == ansible_play_hosts[0]
  delegate_to: "{{ ansible_play_hosts[0] }}"
  tags: etcd

- name: generate peer ownca certificate
  openssl_certificate:
    path: "/etc/etcd/pki/peer.crt"
    csr_path: "/etc/etcd/pki/peer.csr"
    privatekey_path: "/etc/etcd/pki/peer.key"
    ownca_path: "/etc/etcd/pki/ca.crt"
    ownca_privatekey_path: "/etc/etcd/pki/ca.key"
    provider: "ownca"
  when: inventory_hostname == ansible_play_hosts[0]
  delegate_to: "{{ ansible_play_hosts[0] }}"
  tags: etcd

- name: base64 encode certificates
  shell: |
    set -o pipefail
    tar zcf - -C / etc/etcd/pki | base64 -w 0
  args:
    executable: "/bin/bash"
  delegate_to: "{{ ansible_play_hosts[0] }}"
  register: base64_encode_result
  changed_when: base64_encode_result is not succeeded
  tags: etcd

- name: base64 decode certificates
  shell: |
    set -o pipefail
    echo -n {{ base64_encode_result.stdout | quote }} | base64 -d | tar zx -C /
  args:
    executable: "/bin/bash"
  when: inventory_hostname != ansible_play_hosts[0]
  register: base64_decode_result
  changed_when: base64_decode_result is not succeeded
  tags: etcd

- name: prepare files
  file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
    state: "{{ item.state | default('file') }}"
  with_items:
    - { dest: "/etc/default/etcd" }
    - { dest: "/etc/etcd/pki/ca.crt", owner: "etcd", group: "etcd", mode: "0600" }
    - { dest: "/etc/etcd/pki/ca.csr", owner: "etcd", group: "etcd", mode: "0600" }
    - { dest: "/etc/etcd/pki/ca.key", owner: "etcd", group: "etcd", mode: "0600" }
    - { dest: "/etc/etcd/pki/peer.crt", owner: "etcd", group: "etcd", mode: "0600" }
    - { dest: "/etc/etcd/pki/peer.csr", owner: "etcd", group: "etcd", mode: "0600" }
    - { dest: "/etc/etcd/pki/peer.key", owner: "etcd", group: "etcd", mode: "0600" }
    - { dest: "/etc/etcd/pki/server.crt", owner: "etcd", group: "etcd", mode: "0600" }
    - { dest: "/etc/etcd/pki/server.csr", owner: "etcd", group: "etcd", mode: "0600" }
    - { dest: "/etc/etcd/pki/server.key", owner: "etcd", group: "etcd", mode: "0600" }
    - { dest: "/lib/systemd/system/etcd.service" }
    - { dest: "/usr/local/bin/etcd", mode: "0755" }
    - { dest: "/usr/local/bin/etcdctl", mode: "0755" }
  tags: etcd

- name: enable service
  service:
    name: etcd
    enabled: true
  changed_when: false
  ignore_errors: true
  tags: etcd
