---

# (c) Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# etcd release.
etcd_release: "{{ _etcd_release }}"

# etcd version.
etcd_version: "{{ _etcd_version[etcd_release] }}"

# Human-readable name for this member.
etcd_name: "{{ inventory_hostname }}"

# Path to the data directory.
etcd_data_dir: "/var/lib/etcd/default"

# Number of committed transactions to trigger a snapshot to disk.
etcd_snapshot_count: 10000

# List of URLs to listen on for peer traffic.
etcd_listen_peer_urls: "https://{{ ansible_default_ipv4.address }}:2380,https://127.0.0.1:2380"

# List of URLs to listen on for client traffic.
etcd_listen_client_urls: "https://{{ ansible_default_ipv4.address }}:2379,https://127.0.0.1:2379"

# List of this member's peer URLs to advertise to the rest of the cluster.
etcd_initial_advertise_peer_urls: "https://{{ ansible_default_ipv4.address }}:2380"

# initial cluster configuration for bootstrapping.
etcd_initial_cluster: >-
  {%- set _ns = namespace() -%}
  {%- set _ns._params = [] -%}
  {%- for host in groups['etcd'] -%}
  {%-   set _ns._params = _ns._params + [host + "=https://" + hostvars[host].ansible_default_ipv4.address + ":2380"] -%}
  {%- endfor -%}
  {{ _ns._params | join(',') }}

# Initial cluster state ("new" or "existing").
etcd_initial_cluster_state: "new"

# Initial cluster token for the etcd cluster during bootstrap.
etcd_initial_cluster_token: "etcd-cluster"

# List of this member's client URLs to advertise to the rest of the cluster.
etcd_advertise_client_urls: "https://{{ ansible_default_ipv4.address }}:2379"

# Path to the client server TLS cert file.
etcd_cert_file: "/etc/etcd/pki/server.crt"

# Path to the client server TLS key file.
etcd_key_file: "{{ etcd_cert_file | splitext | first }}.key"

# commonName field of the CSR.
etcd_csr_common_name: "{{ groups['etcd'][0] }}"

# subjectAltName field of the CSR.
etcd_csr_subject_alt_name: >-
  {%- set _ns = namespace() -%}
  {%- set _ns._params = ["DNS:localhost", "IP:127.0.0.1"] -%}
  {%- for host in groups['etcd'] -%}
  {%-   set _ns._params = _ns._params + ["DNS:" + host, "IP:" + hostvars[host].ansible_default_ipv4.address] -%}
  {%- endfor -%}
  {{ _ns._params }}

# Enable client cert authentication.
etcd_client_cert_auth: true

# Path to the client server TLS trusted CA key file.
etcd_trusted_ca_file: "/etc/etcd/pki/ca.crt"

# Client TLS using generated certificates.
etcd_auto_tls: false

# Path to the peer server TLS cert file.
etcd_peer_cert_file: "/etc/etcd/pki/peer.crt"

# Path to the peer server TLS key file.
etcd_peer_key_file: "{{ etcd_peer_cert_file | splitext | first }}.key"

# commonName field of the CSR.
etcd_peer_csr_common_name: "{{ groups['etcd'][0] }}"

# subjectAltName field of the CSR.
etcd_peer_csr_subject_alt_name: >-
  {%- set _ns = namespace() -%}
  {%- set _ns._params = ["DNS:localhost", "IP:127.0.0.1"] -%}
  {%- for host in groups['etcd'] -%}
  {%-   set _ns._params = _ns._params + ["DNS:" + host, "IP:" + hostvars[host].ansible_default_ipv4.address] -%}
  {%- endfor -%}
  {{ _ns._params }}

# Enable peer client cert authentication.
etcd_peer_client_cert_auth: true

# Peer TLS using generated certificates.
etcd_peer_auto_tls: false

# Path to the peer server TLS trusted CA file.
etcd_peer_trusted_ca_file: "{{ etcd_trusted_ca_file }}"

# Auto compaction retention for mvcc key value store in hour. 0 means disabled
etcd_auto_compaction_retention: 0

# Interpret ‘auto-compaction-retention’ as duration or revision retention
etcd_auto_compaction_mode: "periodic"
